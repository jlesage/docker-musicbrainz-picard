---

#
# Definitions for MusicBrainz Picard docker container.
#
# This file is used as data source to generate README.md and unRAID template files
# from Jinja2 templates.
#

app:
  id: 30
  name: musicbrainz-picard
  friendly_name: MusicBrainz Picard
  gui_type: x11
  base_os: alpine
  project:
    description: |-
      MusicBrainz Picard is a cross-platform music tagger powered by the MusicBrainz
      database.
    url: https://picard.musicbrainz.org
  unraid:
    #support_url: https://forums.unraid.net/topic/XXXXX-support-musicbrainz-picard/
    category: "MediaApp:Music Tools:"
  documentation:
    sections:
      - title: Access to Optical Drive(s)
        level: 2
        content: |-
          By default, a Docker container doesn't have access to host's devices. However,
          access to one or more devices can be granted with the `--device DEV` parameter
          of the `docker run` command.

          In the Linux world, optical drives are represented by device files named
          `/dev/srX`,  where `X` is a number. The first drive is `/dev/sr0`, the second
          is `/dev/sr1` and so on. To allow {{ app.friendly_name }} to access the first drive,
          the following parameter is needed:
          ```
          --device /dev/sr0
          ```

          The easiest way to determine the correct Linux devices to expose is to run the
          container and look at its log. During the startup, messages similar to these
          ones are outputed:
          ```
          [cont-init   ] 54-check-optical-drive.sh: looking for usable optical drives...
          [cont-init   ] 54-check-optical-drive.sh: found optical drive 'hp HLDS DVDRW GUD1N LD02' [/dev/sr0]
          [cont-init   ] 54-check-optical-drive.sh:   [ OK ]   associated SCSI CD-ROM (sr) device detected: /dev/sr0.
          [cont-init   ] 54-check-optical-drive.sh:   [ ERR ]  the host device /dev/sr0 is not exposed to the container.
          [cont-init   ] 54-check-optical-drive.sh: no usable optical drives found.
          ```

          In this case, it's clearly indicated that `/dev/sr0` needs to be exposed to the
          container.

          > [!NOTE]
          > The container's log can be viewed by running the command
          > `docker logs <container name>`.

          Alternatively, Linux devices can be found by executing the following command on
          the **host**:

          ```
          lsscsi -k
          ```

          From the command's output, the last column associated to an optical drive
          indicates the Linux device that should be exposed to the container. In the
          following output example, `/dev/sr0` would be exposed:

          ```
          [0:0:0:0]    disk    ATA      SanDisk SSD PLUS 9100  /dev/sda
          [1:0:0:0]    disk    ATA      SanDisk SSD PLUS 9100  /dev/sdb
          [2:0:0:0]    disk    ATA      ST3500418AS      HP34  /dev/sdc
          [4:0:0:0]    cd/dvd  hp HLDS  DVDRW  GUD1N     LD02  /dev/sr0
          ```
  changelog:
    - version: 25.06.1
      date: 2025-06-21
      changes:
        - 'Added Firefox.'
        - 'Updated baseimage to version 4.8.0, which brings the following changes:'
        - '2:Added automatic reconnect support of the web interface.'
        - '2:Added web file manager.'
        - '2:Updated noVNC to version 1.6.0.'
        - '2:Updated web UI components (Bootstrap).'
        - '2:Do not ask VNC password when accessing the web interface and web authentication is enabled.'
    - version: 25.04.1
      date: 2005-04-25
      changes:
        - 'Initial release.'

container:
  storage_permissions: rw

  # Environment variables.
  environment_variables: []

  # Volumes
  volumes: []

  # Network ports
  ports: []

  # Devices
  devices:
    - path: /dev/sr0
      description: >-
        This is the Linux device file representing the optical drive.
      include_in_quick_start: true
